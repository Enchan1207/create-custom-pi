#
# Buildrootコンテナのビルド
#
name: build base buildroot container

on:
  push:
  pull_request:
    paths:
      - base.Dockerfile

env:
  BUILDROOT_BASE_IMAGE_CACHE_PATH: buildroot_base_image
  BUILDROOT_DIST_IMAGE_PATH: buildroot_dist_image

jobs:
  build_sdk:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: restore cached docker image
        id: restore-docker-image
        uses: actions/cache/restore@v3
        with:
          path: ${{ env.BUILDROOT_BASE_IMAGE_CACHE_PATH }}
          key: ${{ runner.os }}-docker-buildroot-${{ hashFiles('base.Dockerfile') }}"

      - name: load docker image if cached
        if: steps.restore-docker-image.outputs.cache-hit == 'true'
        run: docker load -i ${BUILDROOT_BASE_IMAGE_CACHE_PATH}

      - name: build and save base docker image if not cached
        if: steps.restore-docker-image.outputs.cache-hit != 'true'
        run: |
          docker build -t enchan/buildroot_base:latest -f base.Dockerfile .
          docker save enchan/buildroot_base -o ${BUILDROOT_BASE_IMAGE_CACHE_PATH}

      - name: cache docker image
        if: steps.restore-docker-image.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: ${{ env.BUILDROOT_BASE_IMAGE_CACHE_PATH }}
          key: ${{ runner.os }}-docker-buildroot-${{ hashFiles('base.Dockerfile') }}"

      - name: build SDK using base container
        run: docker run --rm -i -v "$(pwd):/host" -v "$(pwd)/dist:/dist" enchan/buildroot_base /host/scripts/build_sdk.sh

      - name: identify SDK path
        id: sdk-prepare
        run: |
          DISTDIR=./dist
          ls -la ${DISTDIR}/images
          SDK_PATH=`find ${DISTDIR}/images -name "*.tar.gz"`
          SDK_NAME=`basename $SDK_PATH`
          sudo mv $SDK_PATH ./$SDK_NAME
          sudo chown runner:runner ./$SDK_NAME
          echo "sdk-name=$SDK_NAME" >> "$GITHUB_OUTPUT"

      - name: build and save buildroot docker image
        run: |
          docker build -t enchan/buildroot:latest -f dist.Dockerfile . --build-arg SDK_PATH=${{ steps.sdk-prepare.outputs.sdk-name }}
          docker save enchan/buildroot -o ${BUILDROOT_DIST_IMAGE_PATH}

      - name: upload built image as artifact
        uses: actions/upload-artifact@v3
        with:
          name: Buildroot distribution image
          path: ${BUILDROOT_DIST_IMAGE_PATH}

      - uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER_NAME }}
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_EMAIL }}
          access_token_scopes: https://www.googleapis.com/auth/drive

      - name: upload image to google drive
        uses: Enchan1207/upload-googledrive@v1
        with:
          filepath: ${BUILDROOT_DIST_IMAGE_PATH}
          name: docker-buildroot-dist
          parent: ${{ secrets.FOLDER_ID }}
          overwrite: true
