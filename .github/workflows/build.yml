#
# Buildroot SDKのビルド
#
name: build Buildroot SDK

on:
  push:
  pull_request:
    paths:
      - base.Dockerfile

env:
  BUILDROOT_BASE_IMAGE_CACHE_PATH: buildroot_base_image

jobs:
  build_sdk:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: restore cached docker image
        id: restore-docker-image
        uses: actions/cache/restore@v3
        with:
          path: ${{ env.BUILDROOT_BASE_IMAGE_CACHE_PATH }}
          key: ${{ runner.os }}-docker-buildroot-${{ hashFiles('base.Dockerfile') }}"

      - name: load docker image if cached
        if: steps.restore-docker-image.outputs.cache-hit == 'true'
        run: docker load -i ${BUILDROOT_BASE_IMAGE_CACHE_PATH}

      - name: build and save base docker image if not cached
        if: steps.restore-docker-image.outputs.cache-hit != 'true'
        run: |
          docker build -t enchan/buildroot_base:latest -f base.Dockerfile .
          docker save enchan/buildroot_base -o ${BUILDROOT_BASE_IMAGE_CACHE_PATH}

      - name: cache docker image
        if: steps.restore-docker-image.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: ${{ env.BUILDROOT_BASE_IMAGE_CACHE_PATH }}
          key: ${{ runner.os }}-docker-buildroot-${{ hashFiles('base.Dockerfile') }}"

      - name: build SDK using base container
        run: docker run --rm -i -v "$(pwd):/host" -v "$(pwd)/dist:/dist" enchan/buildroot_base /host/scripts/build_sdk.sh

      - name: identify distrubution files path
        id: dist-prepare
        run: |
          DISTDIR=./dist
          ls -la ${DISTDIR}
          ls -la ${DISTDIR}/images
          SDK_ORIGIN_PATH=`find ${DISTDIR}/images -name "*.tar.gz"`
          SDK_NAME=`basename $SDK_ORIGIN_PATH`
          sudo mv $SDK_ORIGIN_PATH ./$SDK_NAME
          sudo mv ${DISTDIR}/legal-info.tar.gz ./
          sudo chown runner:runner ./legal-info.tar.gz ./$SDK_NAME
          echo "sdk-path=./$SDK_NAME" >> "$GITHUB_OUTPUT"
          echo "legal-info-path=./legal-info.tar.gz" >> "$GITHUB_OUTPUT"

      - name: upload SDK as artifact
        uses: actions/upload-artifact@v3
        with:
          name: SDK
          path: ${{ steps.dist-prepare.outputs.sdk-path }}

      - name: draft release
        uses: softprops/action-gh-release@v1
        with:
          name: SDK release draft
          draft: true
          files: |
            ${{ steps.dist-prepare.outputs.sdk-path }}
            ${{ steps.dist-prepare.outputs.legal-info-path }}
